{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","utils/format.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","index.js"],"names":["Header","state","action","type","loading","transactions","payload","filter","transaction","_id","error","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","a","axios","get","res","data","response","id","delete","config","headers","post","Provider","value","getTransactions","deleteTransaction","addTransaction","numberWithCommas","x","toString","replace","Balance","total","useContext","map","amount","reduce","sum","item","toFixed","IncomeExpenses","amounts","income","expense","className","Transaction","props","sign","text","Math","abs","onClick","TransactionList","useEffect","key","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","htmlFor","onChange","target","placeholder","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d319a81b.chunk.js","sourcesContent":["import React from 'react'\n\n// Functional components with Hooks\nexport const Header = () => {\n    return (\n        <h2>\n            Expense Tracker\n        </h2>\n    )\n}\n","export default (state, action) => {\n    switch(action.type) {\n        case 'GET_TRANSACTIONS':\n            return {\n                ...state,\n                loading: false,\n                transactions: action.payload\n            }\n        case 'DELETE_TRANSACTION':\n            return {\n                ...state,\n                transactions: state.transactions.filter(transaction => transaction._id !== action.payload)\n            }\n        case 'ADD_TRANSACTION':\n            return {\n                ...state,\n                transactions: [...state.transactions, action.payload]\n            }\n        case 'TRANSACTION_ERROR':\n            return {\n                ...state,\n                error: action.payload\n            }\n        default:\n            return state;\n    }\n}","// We will create the context in here\nimport React, { createContext, useReducer } from 'react';\nimport AppReducer from './AppReducer';\nimport axios from 'axios';\n\n// Initial state\nconst initialState = {\n    transactions: [],\n    error: null,\n    loading: true\n}\n\n// Create context\nexport const GlobalContext = createContext(initialState);\n\n// Provider component\nexport const GlobalProvider = ({ children }) => {\n    const [state, dispatch] = useReducer(AppReducer, initialState);\n\n    // Action\n    async function getTransactions() {\n        try {\n            const res = await axios.get('/api/v1/transactions');\n            dispatch({\n                type: 'GET_TRANSACTIONS',\n                payload: res.data.data\n            });\n        } catch (err) {\n            dispatch({\n                type: 'TRANSACTION_ERROR',\n                payload: err.response.data.error\n            });\n        }\n    }\n\n    async function deleteTransaction(id) {\n\n        try {\n            await axios.delete(`/api/v1/transactions/${id}`);\n            dispatch({\n                type: 'DELETE_TRANSACTION',\n                payload: id\n            });\n        } catch (err) {\n            dispatch({\n                type: 'TRANSACTION_ERROR',\n                payload: err.response.data.error\n            });\n        }\n    }\n\n    async function addTransaction(transaction) {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        try {\n            const res = await axios.post('/api/v1/transactions', transaction, config);\n            dispatch({\n                type: 'ADD_TRANSACTION',\n                payload: res.data.data\n            });\n        } catch (err) {\n            dispatch({\n                type: 'TRANSACTION_ERROR',\n                payload: err.response.data.error\n            });\n        }\n    } \n\n    return (<GlobalContext.Provider value={{\n        transactions: state.transactions,\n        error: state.error,\n        loading: state.loading,\n        getTransactions,\n        deleteTransaction,\n        addTransaction\n    }}>\n        {children}\n    </GlobalContext.Provider>);\n}","export function numberWithCommas(x) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g,\",\");\n}","import React, { useContext } from 'react'\nimport { GlobalContext } from '../context/GlobalState';\nimport { numberWithCommas } from '../utils/format'\n\nexport const Balance = () => {\n\n    const { transactions } = useContext(GlobalContext);\n    const amounts = transactions.map(transaction => transaction.amount);\n    const total = amounts.reduce((sum,item) => (sum += item),0).toFixed(2);\n\n    return (\n        <>\n            <h4>Your Balance</h4>\n            <h1>${numberWithCommas(total)}</h1>\n        </>\n    )\n}\n","import React, { useContext } from 'react'\nimport { GlobalContext } from '../context/GlobalState';\nimport { numberWithCommas } from '../utils/format'\n\nexport const IncomeExpenses = () => {\n\n    const { transactions } = useContext(GlobalContext);\n\n    const amounts = transactions.map(transaction => transaction.amount);\n\n    const income = amounts\n        .filter(item => item > 0)\n        .reduce((sum,item) => (sum += item), 0)\n        .toFixed(2);\n\n    const expense = (amounts\n        .filter(item => item < 0)\n        .reduce((sum,item) => (sum += item), 0) * -1)\n        .toFixed(2);\n\n    return (\n        <div className=\"inc-exp-container\">\n            <div>\n                <h4>Income</h4>\n                <p className=\"money plus\">${numberWithCommas(income)}</p>\n            </div>\n            <div>\n                <h4>Expense</h4>\n                <p className=\"money minus\">${numberWithCommas(expense)}</p>\n            </div>\n        </div>\n    )\n}\n","import React, { useContext } from 'react'\nimport { GlobalContext } from '../context/GlobalState';\nimport { numberWithCommas } from '../utils/format'\n\nexport const Transaction = (props) => {\n\n    const { deleteTransaction } = useContext(GlobalContext);\n\n    const sign = props.transaction.amount < 0 ? '-' : '+';\n    return (\n        <li className={ props.transaction.amount < 0 ? 'minus' : 'plus'}>\n            { props.transaction.text} <span>{sign}${numberWithCommas(Math.abs(props.transaction.amount))}</span><button onClick={() => deleteTransaction(props.transaction._id)} className=\"delete-btn\">x</button>\n        </li>\n    )\n}\n","import React, { useContext, useEffect } from 'react';\nimport { Transaction } from './Transaction';\n\nimport { GlobalContext } from '../context/GlobalState';\n\nexport const TransactionList = () => {\n\n    const { transactions, getTransactions } = useContext(GlobalContext);\n\n    useEffect(() => {\n        getTransactions();\n    }, []);\n    \n    return (\n        <>\n            <h3>History</h3>\n            <ul className=\"list\">\n                { transactions.map(transaction => (<Transaction key={transaction.id} transaction={transaction} />))}\n            </ul>\n        </>\n    )\n}\n","import React, { useState, useContext } from 'react'\nimport { GlobalContext } from '../context/GlobalState';\n\nexport const AddTransaction = () => {\n    const [text, setText] = useState('');\n    const [amount, setAmount] = useState(0);\n\n    const { addTransaction } = useContext(GlobalContext);\n\n    const onSubmit = e => {\n        e.preventDefault();\n        const newTransaction = {\n            id: Math.floor(Math.random() * 100000000),\n            text,\n            amount: +amount // the plus sign turns it into a number\n        }\n\n        addTransaction(newTransaction);\n    }\n    return (\n        <>\n            <h3>Add new transaction</h3>\n            <form onSubmit={onSubmit}>\n                <div className=\"form-control\">\n                    <label htmlFor=\"text\">Text</label>\n                    <input type=\"text\" value={text} onChange={e => setText(e.target.value)} placeholder=\"Enter text...\"/>\n                </div>\n                <div className=\"form-control\">\n                    <label htmlFor=\"amount\">Amount <br/>(negative - expense, positive - income)</label>\n                    <input type=\"number\" value={amount} onChange={e => setAmount(e.target.value)} placeholder=\"Enter amount...\"/>\n                </div>\n                <button className=\"btn\">Add transaction</button>\n            </form>\n        </>\n    )\n}\n","import React from 'react';\nimport { Header } from './components/Header';\nimport { Balance } from './components/Balance';\nimport { IncomeExpenses } from './components/IncomeExpenses';\nimport { TransactionList } from './components/TransactionList';\nimport { AddTransaction } from './components/AddTransaction';\n\nimport { GlobalProvider } from './context/GlobalState';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Header />\n      <div className=\"container\">\n        <Balance />\n        <IncomeExpenses />\n        <TransactionList />\n        <AddTransaction />\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}